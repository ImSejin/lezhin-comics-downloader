# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
    # - release
    - dev
    
  schedule:
  - cron: "0 20 * * 6" # Runs at 05:00 Asia/Seoul on Sun.

jobs:
  build:
    name: Builds with java ${{ matrix.java }} on ${{ matrix.os }}
       
    strategy:
      fail-fast: true
      max-parallel: 9 # Sum of matrices.
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: [8, 11, 15]
        
    runs-on: ${{ matrix.os }}
    
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      GITHUB_WORKSPACE: ${{ github.workspace }}
      
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java }}
        distribution: 'adopt'
        
    - name: Install Google Chrome before maven test on linux
      if: runner.os == 'Linux'
      run: |
        echo 'GITHUB_WORKSPACE: ${{ github.workspace }}'
        chmod +x ${GITHUB_WORKSPACE}/src/test/resources/chrome-driver/92.0.4515.107/linux/chromedriver
        sudo apt-get -y install ${GITHUB_WORKSPACE}/src/test/resources/google-chrome/92.0.4515.159/linux/google-chrome-amd64-92.0.4515.159.deb
        apt-get -y --fix-broken install
    
    - name: Install Google Chrome before maven test on mac
      if: runner.os == 'macOS'
      run: |
        echo 'GITHUB_WORKSPACE: $GITHUB_WORKSPACE'
        chmod +x $GITHUB_WORKSPACE/src/test/resources/chrome-driver/92.0.4515.107/mac/chromedriver
        
    - name: Install Google Chrome before maven test on windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        echo 'GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE'
        
        # Installs Google Chrome silently.
        Start-Process -FilePath '$env:GITHUB_WORKSPACE/src/test/resources/google-chrome/92.0.4515.159/ChromeSetup-92.0.4515.159.exe' -Args '/silent /install' -Wait
        
    - name: Build with Maven
      run: mvn clean package -B --file pom.xml
      
    - name: Send code coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        verbose: true
