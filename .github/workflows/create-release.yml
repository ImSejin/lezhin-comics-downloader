name: Create new release

on:
  push:
    # When a version tag is pushed.
    tags:
#      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-[a-zA-Z]+'

jobs:
  create-release:
    name: Create a release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'zulu'

    - name: Download chrome driver
      run: |
        # Get latest version number.
        VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
        
        # Download chromedriver for your OS.
        if [[ $OSTYPE == "linux-gnu" ]]; then
          URL="https://chromedriver.storage.googleapis.com/$VERSION/chromedriver_linux64.zip"
        elif [[ $OSTYPE == "darwin"* ]]; then
          URL="https://chromedriver.storage.googleapis.com/$VERSION/chromedriver_mac64.zip"
        elif [[ $OSTYPE == "win32" ]]; then
          URL="https://chromedriver.storage.googleapis.com/$VERSION/chromedriver_win32.zip"
        else
          echo "Error: Unsupported operating system $OSTYPE"
          exit 1
        fi
        
        # Download and extract chromedriver.
        curl -O $URL
        unzip chromedriver*.zip
        rm chromedriver*.zip

    - name: Build with Maven
      run: mvn clean package -B --file pom.xml -Dmaven.test.skip=true

    # https://stackoverflow.com/questions/57819539/github-actions-how-to-share-a-calculated-value-between-job-steps
    - name: Set release body
      id: set_release_body
      run: |
        TAG='${{ github.ref_name }}'
        TAG_ID=$(echo $TAG | sed 's/\.//g')
        echo "RELEASE_BODY=[See changelog](https://github.com/ImSejin/lezhin-comics-downloader/blob/dev/CHANGELOG.md#v$TAG_ID)" >> $GITHUB_OUTPUT

    - name: Attach artifacts
      uses: ncipollo/release-action@v1
      with:
        name: v${{ github.ref_name }}
        draft: false
        prerelease: true
        makeLatest: false
        skipIfReleaseExists: true
        artifactErrorsFailBuild: true
        body: ${{ steps.set_release_body.outputs.RELEASE_BODY }}
        artifacts: 'target/lezhin-comics-downloader-*.jar'
        artifactContentType: 'application/java-archive'
